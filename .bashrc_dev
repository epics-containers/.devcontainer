#!/bin/bash

#################### EXAMPLE ###################################################

# personal .bashrc_dev for setting up environment in developer containers

export LS_OPTIONS='--color=auto'
eval "$(dircolors)" 2> /dev/null
alias ls='ls $LS_OPTIONS'
alias ll='ls $LS_OPTIONS -l'
alias l='ls $LS_OPTIONS -lA'

# run the user's .bashrc_dev if it exists
if [[ -f /home/$USER/.bashrc_dev ]] ; then
    source /home/$USER//.bashrc_dev
fi

# setup completion
if [[ -f /usr/share/bash-completion/completions/git ]] ; then
    source /usr/share/bash-completion/completions/git
fi
if [[ -f /usr/bin/podman ]] ; then
    source <(podman completion bash)
fi
if [[ -f /venv/bin/ec ]] ; then
    source <(ec --show-completion bash)
fi
if [[ -f /bin/helm ]] ; then
    source <(helm completion bash)
fi
if [[ -f /bin/kubectl ]] ; then
    source <(kubectl completion bash)
    # also do completion for 'k' aliased to 'kubectl'
    alias k=kubectl
    complete -F __start_kubectl k
fi

# share history between all terminal instances
export HISTIGNORE="&:l[sl]:[fb]g:exit"
export HISTFILESIZE=10000
shopt -s histappend
export PROMPT_COMMAND='history -a'


# prompt: adds 'IOC' for generic IOC containers and 'dev-u22' for the workspace
# container
function parse_git_branch {
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}

# make a useful prompt, including current container name
PS1="\[\e[32m\]\$(parse_git_branch)\[\e[m\][\[\e[34m\]\[\e[m\]\W]\$ "
export PS1="[\[\e[31m\]${DEV_PROMPT:-container}\[\e[m\]]${PS1}"

############ REPLACE all environment below with your details ###################
# point at your cluster config file
export KUBECONFIG=/home/${USER}/.kube/config_pollux
# the default beamline for ec commands
export BEAMLINE=p45 # equivalent to K8S_BEAMLINE=bl45p
# where to get HELM charts for ec commands
export K8S_HELM_REGISTRY=helm-test.diamond.ac.uk/iocs
# set to true to add /$K8S_DOMAIN to the helm registry URL
export K8S_HELM_REGISTRY_ADD_DOMAIN=true
# where to get container IMAGES for ec commands
export K8S_IMAGE_REGISTRY=ghcr.io/epics-containers
# the URL for the facility logging system
export K8S_LOG_URL='https://graylog2.diamond.ac.uk/search?rangetype=relative&fields=message%2Csource&width=1489&highlightMessage=&relative=172800&q=pod_name%3A{ioc_name}*'
# set this to True to supress output of commands in 'ec' CLI
unset K8S_QUIET
# extra arguments to supply to containerised CLI commands
export K8S_CLI_ARGS='
-v=/scratch:/scratch
'
